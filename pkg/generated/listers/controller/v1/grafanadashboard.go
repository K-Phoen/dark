// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/K-Phoen/dark/pkg/apis/controller/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// GrafanaDashboardLister helps list GrafanaDashboards.
type GrafanaDashboardLister interface {
	// List lists all GrafanaDashboards in the indexer.
	List(selector labels.Selector) (ret []*v1.GrafanaDashboard, err error)
	// GrafanaDashboards returns an object that can list and get GrafanaDashboards.
	GrafanaDashboards(namespace string) GrafanaDashboardNamespaceLister
	GrafanaDashboardListerExpansion
}

// grafanaDashboardLister implements the GrafanaDashboardLister interface.
type grafanaDashboardLister struct {
	indexer cache.Indexer
}

// NewGrafanaDashboardLister returns a new GrafanaDashboardLister.
func NewGrafanaDashboardLister(indexer cache.Indexer) GrafanaDashboardLister {
	return &grafanaDashboardLister{indexer: indexer}
}

// List lists all GrafanaDashboards in the indexer.
func (s *grafanaDashboardLister) List(selector labels.Selector) (ret []*v1.GrafanaDashboard, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.GrafanaDashboard))
	})
	return ret, err
}

// GrafanaDashboards returns an object that can list and get GrafanaDashboards.
func (s *grafanaDashboardLister) GrafanaDashboards(namespace string) GrafanaDashboardNamespaceLister {
	return grafanaDashboardNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GrafanaDashboardNamespaceLister helps list and get GrafanaDashboards.
type GrafanaDashboardNamespaceLister interface {
	// List lists all GrafanaDashboards in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.GrafanaDashboard, err error)
	// Get retrieves the GrafanaDashboard from the indexer for a given namespace and name.
	Get(name string) (*v1.GrafanaDashboard, error)
	GrafanaDashboardNamespaceListerExpansion
}

// grafanaDashboardNamespaceLister implements the GrafanaDashboardNamespaceLister
// interface.
type grafanaDashboardNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all GrafanaDashboards in the indexer for a given namespace.
func (s grafanaDashboardNamespaceLister) List(selector labels.Selector) (ret []*v1.GrafanaDashboard, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.GrafanaDashboard))
	})
	return ret, err
}

// Get retrieves the GrafanaDashboard from the indexer for a given namespace and name.
func (s grafanaDashboardNamespaceLister) Get(name string) (*v1.GrafanaDashboard, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("grafanadashboard"), name)
	}
	return obj.(*v1.GrafanaDashboard), nil
}
